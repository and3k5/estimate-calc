(()=>{"use strict";var t={d:(o,e)=>{for(var n in e)t.o(e,n)&&!t.o(o,n)&&Object.defineProperty(o,n,{enumerable:!0,get:e[n]})},o:(t,o)=>Object.prototype.hasOwnProperty.call(t,o),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},o={};t.r(o),t.d(o,{TimeSetup:()=>s,getNotationByName:()=>r,parseInput:()=>c});const e=[{notation:"s",singleName:"second",multiName:"seconds",propertyName:"seconds",order:3,ms:1e3,relativeAmount:1e3},{notation:"m",singleName:"minute",multiName:"minutes",propertyName:"minutes",order:2,ms:6e4,relativeAmount:60},{notation:"h",singleName:"hour",multiName:"hours",propertyName:"hours",order:1,ms:36e5,relativeAmount:60},{notation:"d",singleName:"day",multiName:"days",propertyName:"days",order:0,ms:864e5,relativeAmount:24}];e.forEach(((t,o,e)=>t.prev=e[o-1])),e.forEach(((t,o,e)=>t.next=e[o+1]));const n=e;function r(t,o){if(!Array.isArray(t))throw new Error("First argument must be an array");return t.filter((t=>t.notation==o))[0]}class s{constructor({defaultNotations:t=!0,notationsEditor:o=null}={defaultNotations:!0,notationsEditor:null}){if(this.notations=[],console.trace("DEFAULT",t),!0===t)for(var e of n)this.notations.push(Object.assign({},e));"function"==typeof o&&o(this.notations)}}function i(t,o){const e=t.notations.concat().sort(((t,o)=>o.ms-t.ms));var n={};for(var r of e){let t=Math.floor(o/r.ms);n[r.propertyName]=t,t>0&&(o-=t*r.ms)}return n}const a=/(?<amount>[0-9]+)(?<notation>[a-z])/gi;class u{constructor(t,...o){if(this.minutes=0,this.hours=0,this.days=0,!(t instanceof s))throw new Error("Setup parameter required");this.setup=t;var e=0;Object.defineProperty(this,"totalMs",{get:function(){return e},set:function(t){e=t}});for(const o of t.notations)Object.defineProperty(this,o.propertyName,{get:function(){return i(t,e)[o.propertyName]},set:function(n){var r=n-i(t,e)[o.propertyName];0!==r&&(e+=o.ms*r)}});if("string"==typeof o[0])for(const n of o[0].matchAll(a)){if(null==n.groups)throw new Error("missing groups");const o=r(t.notations,n.groups.notation);if(null==o)throw new Error("Did not find a notation for: "+n.groups.notation);e+=o.ms*parseInt(n.groups.amount)}else"object"==typeof o[0]&&null!=o[0]&&(e=function(t,o){let e=0;for(var n of t.notations)o.hasOwnProperty(n.propertyName)&&(e+=o[n.propertyName]*n.ms);return e}(t,o[0]))}add(t){return this.minutes+=t.minutes,this.hours+=t.hours,this.days+=t.days,this}sub(t){return this.minutes-=t.minutes,this.hours-=t.hours,this.days-=t.days,this}clone(){return new u(this.setup,this)}}u.prototype.toString=function(){const t=this;return this.setup.notations.map((o=>({notation:o,value:t[o.propertyName]}))).filter((t=>t.value>0)).sort(((t,o)=>t.notation.order-o.notation.order)).map((t=>t.value+""+t.notation.notation)).join(" ")};const m={name:"add",exec:function(t,o){return t.clone().add(o)}},p={name:"sub",exec:function(t,o){return t.clone().sub(o)}};function c(t,o){const e=function(t,o){return Array.from(o).reduce(((t,o,e)=>("+"==o?e>0&&t.push(m):"-"==o?(0===e&&t.push("0m"),t.push(p)):(0!==e&&0!==t.length&&"string"==typeof t[t.length-1]||t.push(""),t[t.length-1]+=o),t)),[]).reduce(((o,e,n)=>("string"==typeof e?o.push(new u(t,e)):o.push(e),o)),[])}(t,o),n=function(t){for(;t.length>1;){const[o,e,n]=t.splice(0,3);t.splice(0,0,e.exec(o,n))}return t[0]}(e);return n}module.exports.calc=o})();